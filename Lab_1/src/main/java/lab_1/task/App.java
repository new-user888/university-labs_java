/*
 * This source file was generated by the Gradle 'init' task
 */
package lab_1.task;

import org.ejml.simple.SimpleMatrix;

import java.util.Random;

public class App {
    // Helper to print a matrix nicely
    private static void printMatrix(String title, SimpleMatrix m) {
        System.out.println("========== " + title + " ==========");
        for (int i = 0; i < m.numRows(); i++) {
            for (int j = 0; j < m.numCols(); j++) {
                System.out.printf("%10.4f ", m.get(i, j));
            }
            System.out.println();
        }
        System.out.println();
    }

    public static void main(String[] args) {
        short studentNumber = 4;

        System.out.println("========================================");
        System.out.println("           Matrix Lab Output            ");
        System.out.println("========================================");
        System.out.printf("Student Number: %d\nC5: %d\nC7: %d\nC11: %d\n", studentNumber,
                studentNumber % 5, studentNumber % 7, studentNumber % 11);
        System.out.println("========================================\n");

        int rows = 3, cols = 3; // Example size

        Random rand = new Random();

        try {
            // Step 1: Create matrices A and B based on C7
            SimpleMatrix A, B, C;
            switch (studentNumber % 7) {
                case 2: // short
                    A = SimpleMatrix.random_DDRM(rows, cols, -10, 10, rand);
                    B = SimpleMatrix.random_DDRM(rows, cols, -10, 10, rand);
                case 4: // long
                    A = SimpleMatrix.random_DDRM(rows, cols, -10, 10, rand);
                    B = SimpleMatrix.random_DDRM(rows, cols, -10, 10, rand);
                    break;
                default:
                    throw new IllegalArgumentException("Invalid C7 value");
            }

            printMatrix("Matrix A", A);
            printMatrix("Matrix B", B);

            // Step 2: Perform operation based on C5
            switch (studentNumber % 5) {
                case 4: // C = AB, матричний добуток
                    C = A.mult(B);
                    printMatrix("C = AB (matrix product)", C);
                    break;
                default:
                    throw new IllegalArgumentException("Invalid C5 value");
            }

            // Step 3: Perform operation based on C11
            System.out.println("========== Result of operation C11 ==========");
            switch (studentNumber % 11) {
                case 4:
                    double result = MatrixOperations.sumMaxEvenRowsMinOddRows(C);
                    System.out.printf("Sum of max in even rows + min in odd rows: %.4f\n", result);
                    break;
                case 9:
                    double[] avgCols = MatrixOperations.avgCols(C);
                    System.out.print("Average of each column: ");
                    for (double v : avgCols) System.out.printf("%.4f ", v);
                    System.out.println();
                    break;
                default:
                    throw new IllegalArgumentException("Invalid C11 value");
            }
            System.out.println("========================================");
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
            e.printStackTrace();
        }
    }
}